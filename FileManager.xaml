<Window x:Class="Android_Transfer_Protocol.FileManager"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Android_Transfer_Protocol.Properties"
        mc:Ignorable="d"
        Closing="Window_Closing"
        Title="{x:Static local:Resources.ATP}">
    <Window.Resources>
        <RoutedCommand x:Key="CancelPath"/>
        <RoutedCommand x:Key="Copy"/>
        <RoutedCommand x:Key="CreateDir"/>
        <RoutedCommand x:Key="Cut"/>
        <RoutedCommand x:Key="CreateFile"/>
        <RoutedCommand x:Key="Delete"/>
        <RoutedCommand x:Key="Download"/>
        <RoutedCommand x:Key="Duplicate"/>
        <RoutedCommand x:Key="EditLast"/>
        <RoutedCommand x:Key="EditNext"/>
        <RoutedCommand x:Key="Enter"/>
        <RoutedCommand x:Key="Esc"/>
        <RoutedCommand x:Key="FocusPath"/>
        <RoutedCommand x:Key="ForceReflush"/>
        <RoutedCommand x:Key="Last"/>
        <RoutedCommand x:Key="Next"/>
        <RoutedCommand x:Key="OpenPathDir"/>
        <RoutedCommand x:Key="Paste"/>
        <RoutedCommand x:Key="Reflush"/>
        <RoutedCommand x:Key="Rename"/>
        <RoutedCommand x:Key="Root"/>
        <RoutedCommand x:Key="Stop"/>
        <RoutedCommand x:Key="Unroot"/>
        <RoutedCommand x:Key="Upper"/>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource CancelPath}"    Executed="CancelPath_Executed"/>
        <CommandBinding Command="{StaticResource CreateDir}"     Executed="CreateDir_Executed"/>
        <CommandBinding Command="{StaticResource Copy}"          Executed="Copy_Executed"/>
        <CommandBinding Command="{StaticResource CreateFile}"    Executed="CreateFile_Executed"/>
        <CommandBinding Command="{StaticResource Cut}"           Executed="Cut_Executed"/>
        <CommandBinding Command="{StaticResource Delete}"        Executed="Delete_Executed"/>
        <CommandBinding Command="{StaticResource Download}"      Executed="Download_Executed"/>
        <CommandBinding Command="{StaticResource Duplicate}"     Executed="Duplicate_Executed"/>
        <CommandBinding Command="{StaticResource EditLast}"      Executed="EditLast_Executed"/>
        <CommandBinding Command="{StaticResource EditNext}"      Executed="EditNext_Executed"/>
        <CommandBinding Command="{StaticResource Enter}"         Executed="Enter_Executed"/>
        <CommandBinding Command="{StaticResource Esc}"           Executed="Esc_Executed"/>
        <CommandBinding Command="{StaticResource ForceReflush}"  Executed="ForceReflush_Executed"/>
        <CommandBinding Command="{StaticResource FocusPath}"     Executed="FocusPath_Executed"/>
        <CommandBinding Command="{StaticResource Last}"          Executed="Last_Executed"/>
        <CommandBinding Command="{StaticResource Next}"          Executed="Next_Executed"/>
        <CommandBinding Command="{StaticResource OpenPathDir}"   Executed="OpenPathDir_Executed"/>
        <CommandBinding Command="{StaticResource Paste}"         Executed="Paste_Executed"/>
        <CommandBinding Command="{StaticResource Reflush}"       Executed="Reflush_Executed"/>
        <CommandBinding Command="{StaticResource Rename}"        Executed="Rename_Executed"/>
        <CommandBinding Command="{StaticResource Root}"          Executed="Root_Executed"/>
        <CommandBinding Command="{StaticResource Stop}"          Executed="Stop_Executed"/>
        <CommandBinding Command="{StaticResource Unroot}"        Executed="Unroot_Executed"/>
        <CommandBinding Command="{StaticResource Upper}"         Executed="Upper_Executed"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding                        Key="F5"    Command="{StaticResource Reflush}"/>
        <KeyBinding Modifiers="Ctrl"       Key="R"     Command="{StaticResource Reflush}"/>
        <KeyBinding Modifiers="Ctrl"       Key="F5"    Command="{StaticResource ForceReflush}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="R"     Command="{StaticResource ForceReflush}"/>
        <KeyBinding                        Key="F6"    Command="{StaticResource FocusPath}"/>
        <KeyBinding Modifiers="Ctrl"       Key="L"     Command="{StaticResource FocusPath}"/>
    </Window.InputBindings>
    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <StackPanel>
                <Menu IsMainMenu="True">
                    <MenuItem     Header="{x:Static local:Resources.Menu_Device}">
                        <MenuItem Header="{x:Static local:Resources.Menu_Elevation}"                                          Command="{StaticResource Root}"         x:Name="Menu_Elevation"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Deauthorization}"                                    Command="{StaticResource Unroot}"       x:Name="Menu_Deauthorization"/>
                        <Separator/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Disconnect}"     InputGestureText="Alt + F4"         Click="Disconnect_Click"/>
                    </MenuItem>
                    <MenuItem     Header="{x:Static local:Resources.Menu_Browse}"         SubmenuOpened="Menu_Browse_Opened">
                        <MenuItem Header="{x:Static local:Resources.Menu_Open}"           InputGestureText="Enter"            Command="{StaticResource Enter}"/>
                        <Separator/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Reflush}"        InputGestureText="F5"               Command="{StaticResource Reflush}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_ForcedReflush}"  InputGestureText="Ctrl + F5"        Command="{StaticResource ForceReflush}" x:Name="Menu_ForcedReflush" Visibility="Collapsed"/>
                        <Separator/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Back}"           InputGestureText="Alt + ←"         Command="{StaticResource Last}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Forward}"        InputGestureText="Alt + →"         Command="{StaticResource Next}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Upper}"          InputGestureText="Alt + ↑"         Command="{StaticResource Upper}"/>
                    </MenuItem>
                    <MenuItem     Header="{x:Static local:Resources.Menu_Edit}">
                        <MenuItem Header="{x:Static local:Resources.Menu_Cut}"            InputGestureText="Ctrl + X"         Command="{StaticResource Cut}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Copy}"           InputGestureText="Ctrl + C"         Command="{StaticResource Copy}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Duplicate}"      InputGestureText="Ctrl + D"         Command="{StaticResource Duplicate}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Paste}"          InputGestureText="Ctrl + V"         Command="{StaticResource Paste}"/>
                        <Separator/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Rename}"         InputGestureText="F2"               Command="{StaticResource Rename}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_Delete}"         InputGestureText="Delete"           Command="{StaticResource Delete}"/>
                        <Separator/>
                        <MenuItem Header="{x:Static local:Resources.NewFile}"             InputGestureText="Ctrl + N"         Command="{StaticResource CreateFile}"/>
                        <MenuItem Header="{x:Static local:Resources.NewDir}"              InputGestureText="Ctrl + Shift + N" Command="{StaticResource CreateDir}"/>
                        <Separator/>
                        <MenuItem Header="{x:Static local:Resources.Menu_SelectAll}"      InputGestureText="Ctrl + A"         Click="SelectAll"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_CancelSelected}" InputGestureText="Esc"              Click="CancelSelected"/>
                    </MenuItem>
                    <MenuItem Header="{x:Static local:Resources.Menu_View}">
                        <MenuItem     Header="{x:Static local:Resources.Menu_Toolbar}">
                            <MenuItem Header="{x:Static local:Resources.Menu_BrowseTools}"       IsCheckable="True"               Click="BrowseToolsToggle"       Name="BrowseToolsMenu"/>
                            <MenuItem Header="{x:Static local:Resources.Menu_TransmissionTools}" IsCheckable="True"               Click="TransmissionToolsToggle" Name="TransmissionToolsMenu"/>
                            <MenuItem Header="{x:Static local:Resources.Menu_EditTools}"         IsCheckable="True"               Click="EditToolsToggle"         Name="EditToolsMenu"/>
                        </MenuItem>
                        <MenuItem   Header="{x:Static local:Resources.Menu_TaskList}"           IsCheckable="True"               Click="TaskListToggle"         Name="TaskListMenu"/>
                    </MenuItem>
                    <MenuItem     Header="{x:Static local:Resources.Menu_Help}">
                        <MenuItem Header="{x:Static local:Resources.Menu_About}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_CheckUpdate}"/>
                        <MenuItem Header="{x:Static local:Resources.Menu_HowToUse}"/>
                    </MenuItem>
                </Menu>
                <ToolBarTray Orientation="Horizontal" SnapsToDevicePixels="True">
                    <ToolBarTray.Resources>
                        <Style x:Key="ToolBarButtonStyle" TargetType="Button">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                        </Style>
                        <Style x:Key="ToolBarButtonImage" TargetType="Image">
                            <Setter Property="Width" Value="18"/>
                            <Setter Property="Height" Value="18"/>
                        </Style>
                    </ToolBarTray.Resources>
                    <ToolBarTray.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFEEF5FD" Offset="0.5"/>
                            <GradientStop Color="White" Offset="1"/>
                            <GradientStop Color="#FFF0F0F0"/>
                        </LinearGradientBrush>
                    </ToolBarTray.Background>
                    <ToolBar Background="{x:Null}" Name="BrowseTools" Visibility="Collapsed">
                        <ToolBarPanel Orientation="Horizontal" ToolBar.OverflowMode="Never">
                            <Button x:Name="BackButton" Command="{StaticResource Last}"         Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Button_Back}">
                                <Image Source="back.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                            <Button x:Name="ForwardButton" Command="{StaticResource Next}"      Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Button_Forward}">
                                <Image Source="forward.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                        </ToolBarPanel>
                        <Separator/>
                        <ToolBarPanel Orientation="Horizontal" ToolBar.OverflowMode="Never">
                            <Button x:Name="ReflushButton" Command="{StaticResource Reflush}"   Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Button_Reflush}">
                                <Image Source="reflush.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                        </ToolBarPanel>
                        <ToolBarOverflowPanel ToolBar.OverflowMode="Always">
                            <MenuItem Header="{x:Static local:Resources.HideTools}" Click="BrowseToolsToggle"/>
                        </ToolBarOverflowPanel>
                    </ToolBar>
                    <ToolBar Background="{x:Null}" Name="TransmissionTools" Visibility="Collapsed">
                        <ToolBarPanel Orientation="Horizontal" ToolBar.OverflowMode="Never">
                            <Button x:Name="UploadButton" Command="{StaticResource Rename}"     Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Upload}">
                                <Image Source="upload.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                            <Button x:Name="DownloadButton" Command="{StaticResource Delete}"   Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Download}">
                                <Image Source="download.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                        </ToolBarPanel>
                        <ToolBarOverflowPanel ToolBar.OverflowMode="Always">
                            <MenuItem Header="{x:Static local:Resources.HideTools}" Click="TransmissionToolsToggle"/>
                        </ToolBarOverflowPanel>
                    </ToolBar>
                    <ToolBar Background="{x:Null}" Name="EditTools" Visibility="Collapsed">
                        <ToolBarPanel Orientation="Horizontal" ToolBar.OverflowMode="Never">
                            <Button x:Name="CutButton" Command="{StaticResource Cut}"           Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Button_Cut}">
                                <Image Source="cut.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                            <Button x:Name="CopyButton" Command="{StaticResource Copy}"         Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Button_Copy}">
                                <Image Source="copy.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                            <Button x:Name="PasteButton" Command="{StaticResource Paste}"       Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Button_Paste}">
                                <Image Source="paste.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                        </ToolBarPanel>
                        <Separator/>
                        <ToolBarPanel Orientation="Horizontal" ToolBar.OverflowMode="Never">
                            <Button x:Name="RenameButton" Command="{StaticResource Rename}" Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Button_Rename}">
                                <Image Source="rename.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                            <Button x:Name="DeleteButton" Command="{StaticResource Delete}"    Style="{DynamicResource ToolBarButtonStyle}" ToolTip="{x:Static local:Resources.Button_Delete}">
                                <Image Source="delete.png" Style="{DynamicResource ToolBarButtonImage}"/>
                            </Button>
                        </ToolBarPanel>
                        <ToolBarOverflowPanel ToolBar.OverflowMode="Always">
                            <MenuItem Header="{x:Static local:Resources.HideTools}" Click="EditToolsToggle"/>
                        </ToolBarOverflowPanel>
                    </ToolBar>
                </ToolBarTray>
                <DockPanel>
                    <Button x:Name="UpperButton" Command="{StaticResource Upper}" BorderBrush="{x:Null}" Background="{x:Null}" ToolTip="{x:Static local:Resources.Button_Upper}">
                        <Image Source="upper.png" Width="18" Height="18"/>
                    </Button>
                    <TextBox x:Name="PathBar"      GotFocus="PathBar_GotFocus" LostFocus="PathBar_LostFocus" PreviewMouseLeftButtonDown="PathBar_PreviewMouseLeftButtonDown">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{StaticResource OpenPathDir}"/>
                            <KeyBinding Key="Esc"   Command="{StaticResource CancelPath}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </DockPanel>
            </StackPanel>
        </DockPanel>
        <DockPanel DockPanel.Dock="Bottom">
            <StatusBar>
                <StatusBarItem >
                    <TextBlock x:Name="StatusMessage"/>
                </StatusBarItem>
                <StatusBarItem HorizontalContentAlignment="Right" Padding="0" Background="{x:Null}">
                    <Button x:Name="StopButton" Click="TaskListToggle" BorderBrush="{x:Null}" Background="{x:Null}" >
                        <Image Source="unfold.png" Name="UnfoldImg" Width="16" Height="16"/>
                    </Button>
                </StatusBarItem>
            </StatusBar>
        </DockPanel>
        <DockPanel DockPanel.Dock="Bottom">
            <ListBox x:Name="TaskListBox" Visibility="Collapsed" MouseDoubleClick="TaskListBox_MouseDoubleClick" Background="{x:Null}"/>
        </DockPanel>
        <DataGrid 
            x:Name="FilesList" 
            AutoGenerateColumns="False" 
            GridLinesVisibility="None" 
            HeadersVisibility="Column"
            CanUserAddRows="False"
            AllowDrop="True"
            CanUserDeleteRows="False"
            BorderThickness="0"
            SelectedCellsChanged="FilesList_SelectedCellsChanged"
            PreviewMouseDown="FilesList_PreviewMouseDown" 
            BeginningEdit="FilesList_BeginningEdit"
            CellEditEnding="FilesList_CellEditEnding"
            EnableRowVirtualization="True"
            VirtualizingStackPanel.VirtualizationMode ="Recycling"
            VirtualizingStackPanel.IsVirtualizing ="true"
            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
            Drop="FilesList_Drop" Background="#FFF1EDED">
            <DataGrid.InputBindings>
                <KeyBinding Modifiers="Alt"        Key="Up"        Command="{StaticResource Upper}"/>
                <KeyBinding                        Key="Backspace" Command="{StaticResource Upper}"/>
                <KeyBinding Modifiers="Alt"        Key="Left"      Command="{StaticResource Last}"/>
                <KeyBinding Modifiers="Alt"        Key="Right"     Command="{StaticResource Next}"/>
                <KeyBinding Modifiers="Ctrl"       Key="N"         Command="{StaticResource CreateFile}"/>
                <KeyBinding Modifiers="Ctrl+Shift" Key="N"         Command="{StaticResource CreateDir}"/>
                <KeyBinding                        Key="Enter"     Command="{StaticResource Enter}"/>
                <KeyBinding Modifiers="Shift"      Key="Tab"       Command="{StaticResource EditLast}"/>
                <KeyBinding                        Key="Tab"       Command="{StaticResource EditNext}"/>
                <KeyBinding                        Key="F2"        Command="{StaticResource Rename}"/>
                <KeyBinding                        Key="Delete"    Command="{StaticResource Delete}"/>
                <KeyBinding                        Key="Esc"       Command="{StaticResource Esc}"/>
                <KeyBinding Modifiers="Ctrl"       Key="X"         Command="{StaticResource Cut}"/>
                <KeyBinding Modifiers="Ctrl"       Key="C"         Command="{StaticResource Copy}"/>
                <KeyBinding Modifiers="Ctrl"       Key="D"         Command="{StaticResource Duplicate}"/>
                <KeyBinding Modifiers="Shift"      Key="Delete"    Command="{StaticResource Cut}"/>
                <KeyBinding Modifiers="Ctrl"       Key="V"         Command="{StaticResource Paste}"/>
                <KeyBinding Modifiers="Shift"      Key="Insert"    Command="{StaticResource Paste}"/>
                <KeyBinding Modifiers="Shift"      Key="Esc"       Command="{StaticResource Stop}"/>
            </DataGrid.InputBindings>
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0078D7"/>
                <ContextMenu x:Key="RowContextMenu">
                    <MenuItem Header="{x:Static local:Resources.Menu_Open}"           Command="{StaticResource Enter}"/>
                    <Separator/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Download}"  Command="{StaticResource Download}"/>
                    <Separator/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Cut}"       Command="{StaticResource Cut}"/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Copy}"      Command="{StaticResource Copy}"/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Duplicate}" Command="{StaticResource Duplicate}"/>
                    <Separator/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Rename}"    Command="{StaticResource Rename}"/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Delete}"    Command="{StaticResource Delete}"/>
                </ContextMenu>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                </Style>
                <Style TargetType="DataGridCell">
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}}" Value="{x:Static local:Resources.Type}">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}}" Value="{x:Static local:Resources.Link}">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}}" Value="{x:Static local:Resources.Pression}">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}}" Value="{x:Static local:Resources.User}">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}}" Value="{x:Static local:Resources.Group}">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}}" Value="{x:Static local:Resources.DeviceNum}">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}}" Value="{x:Static local:Resources.Size}">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}}" Value="{x:Static local:Resources.Time}">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static local:Resources.FileName}"  IsReadOnly="True" Binding="{Binding Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" x:Name="FilesNameCol"/>
                <DataGridTextColumn Header="{x:Static local:Resources.Type}"      IsReadOnly="True" Binding="{Binding Type}"/>
                <DataGridTextColumn Header="{x:Static local:Resources.DeviceNum}" IsReadOnly="True" Binding="{Binding DeviceNum}"/>
                <DataGridTextColumn Header="{x:Static local:Resources.Link}"      IsReadOnly="True" Binding="{Binding Link}"/>
                <DataGridTextColumn Header="{x:Static local:Resources.Pression}"  IsReadOnly="True" Binding="{Binding Pression}"/>
                <DataGridTextColumn Header="{x:Static local:Resources.User}"      IsReadOnly="True" Binding="{Binding User}"/>
                <DataGridTextColumn Header="{x:Static local:Resources.Group}"     IsReadOnly="True" Binding="{Binding Group}"/>
                <DataGridTextColumn Header="{x:Static local:Resources.Size}"      IsReadOnly="True" Binding="{Binding Size}"/>
                <DataGridTextColumn Header="{x:Static local:Resources.Time}"      IsReadOnly="True" Binding="{Binding DateTime}"/>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu Opened="Menu_Browse_Opened">
                    <MenuItem Header="{x:Static local:Resources.Menu_Upload}"              Click="Upload_Click"/>
                    <Separator/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Elevation}"           Command="{StaticResource Root}"         x:Name="Context_Elevation"/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Deauthorization}"     Command="{StaticResource Unroot}"       x:Name="Context_Deauthorization"/>
                    <Separator/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Reflush}"             Command="{StaticResource Reflush}"/>
                    <MenuItem Header="{x:Static local:Resources.Menu_ForcedReflush}"       Command="{StaticResource ForceReflush}" x:Name="Context_ForcedReflush" Visibility="Collapsed"/>
                    <Separator/>
                    <MenuItem Header="{x:Static local:Resources.Menu_Paste}"/>
                    <MenuItem Header="{x:Static local:Resources.Menu_New}">
                        <MenuItem Header="{x:Static local:Resources.NewDir}"               Command="{StaticResource CreateDir}"/>
                        <MenuItem Header="{x:Static local:Resources.NewFile}"              Command="{StaticResource CreateFile}"/>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </DockPanel>
</Window>
